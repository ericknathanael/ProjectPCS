DROP TABLE JENIS_MENU CASCADE CONSTRAINT PURGE;
DROP TABLE MENU CASCADE CONSTRAINT PURGE;
DROP TABLE JABATAN CASCADE CONSTRAINT PURGE;
DROP TABLE KARYAWAN CASCADE CONSTRAINT PURGE;
DROP TABLE ABSENSI CASCADE CONSTRAINT PURGE;
DROP TABLE IZIN_ABSENSI CASCADE CONSTRAINT PURGE;
DROP TABLE PENGGAJIAN CASCADE CONSTRAINT PURGE;
DROP TABLE D_PENGGAJIAN CASCADE CONSTRAINT PURGE;
DROP TABLE PELANGGAN CASCADE CONSTRAINT PURGE;
DROP TABLE VOUCHER CASCADE CONSTRAINT PURGE;
DROP TABLE MEJA CASCADE CONSTRAINT PURGE;
DROP TABLE WAITING_LIST CASCADE CONSTRAINT PURGE;
DROP TABLE TRANSAKSI CASCADE CONSTRAINT PURGE;
DROP TABLE D_TRANSAKSI CASCADE CONSTRAINT PURGE;


create table jenis_menu ( --sudah
	ID NUMBER PRIMARY KEY,
	KODE_JENIS VARCHAR2(5) NOT NULL,
	NAMA_JENIS VARCHAR(50) NOT NULL
);

create table menu( --sudah
	ID NUMBER PRIMARY KEY,
	ID_JENIS_MENU NUMBER REFERENCES JENIS_MENU(ID),
	KODE_MENU VARCHAR2(5) NOT NULL,
	NAMA_MENU VARCHAR2(55) NOT NULL,
	STATUS NUMBER NOT NULL CHECK(STATUS = 0 OR STATUS = 1),
	HARGA NUMBER NOT NULL,
	DISKON NUMBER NOT NULL,
	HARGA_AKHIR NUMBER NOT NULL
);

CREATE TABLE JABATAN(
	ID NUMBER PRIMARY KEY,
	NAMA_JABATAN VARCHAR2(50) NOT NULL,
	GAJI_POKOK NUMBER NOT NULL
);

CREATE TABLE KARYAWAN(
	ID NUMBER PRIMARY KEY,
	ID_JABATAN NUMBER REFERENCES JABATAN(ID),
	USERNAME VARCHAR2(12) UNIQUE,
	PASS VARCHAR2(50) NOT NULL,
	NAMA_KARYAWAN VARCHAR2(50) NOT NULL,
	TGL_DAFTAR DATE NOT NULL
);

CREATE TABLE ABSENSI(
	ID NUMBER PRIMARY KEY,
	ID_KARYAWAN NUMBER REFERENCES KARYAWAN(ID),
	JAM_MASUK VARCHAR2(50) NOT NULL,
	JAM_PULANG VARCHAR2(50) NOT NULL,
	TGL_WAKTU_ABSEN VARCHAR2(50) NOT NULL
);

CREATE TABLE IZIN_ABSENSI( -- ini table untuk absensi karyawan ketika izin tidak masuk atau absen
	ID NUMBER PRIMARY KEY,
	ID_KARYAWAN NUMBER REFERENCES KARYAWAN(ID),
	JENIS_IZIN_ABSENSI VARCHAR2(4) NOT NULL CHECK(JENIS_IZIN_ABSENSI NOT IN('IZIN', 'CUTI')),
	TGL_MULAI DATE NOT NULL,
	TGL_AKHIR DATE NOT NULL
);

CREATE TABLE PENGGAJIAN(
	NOMOR_SLIP VARCHAR2(15) PRIMARY KEY,
	ID_KARYAWAN NUMBER REFERENCES KARYAWAN(ID),
	TOTAL_GAJI_BERSIH NUMBER NOT NULL,
	TGL_WAKTU_PENGGAJIAN DATE NOT NULL
);

CREATE TABLE D_PENGGAJIAN(
	NOMOR_SLIP VARCHAR2(15) REFERENCES PENGGAJIAN(NOMOR_SLIP),
	NAMA_KARYAWAN VARCHAR2(50) NOT NULL,
	GAJI_POKOK NUMBER NOT NULL,
	TOTAL_TRANSPORT NUMBER NOT NULL,
	TOTAL_MAKAN NUMBER NOT NULL
	BONUS NUMBER NOT NULL, -- bonus berdasarkan absen
);

CREATE TABLE PELANGGAN(
	ID NUMBER PRIMARY KEY,
	NAMA_PELANGGAN VARCHAR2(50) NOT NULL,
	ALAMAT VARCHAR2(50) NOT NULL,
	NO_TELP VARCHAR(12) UNIQUE
);

CREATE TABLE VOUCHER(
	ID NUMBER PRIMARY KEY,
	NAMA VARCHAR2(50) NOT NULL,
	NILAI NUMBER NOT NULL
);

CREATE TABLE MEJA(
	ID NUMBER PRIMARY KEY,
	TERSEDIA CHAR NOT NULL CHECK(TERSEDIA = 'N' OR TERSEDIA = 'Y')
);

--Perkiraan keluar adalah waktu perkiraan pelanggan makan menggunakan meja tersebut, apabila waktu yang ditentukan sudah lewat maka meja akan dapat digunakan oleh pelanggan lain
CREATE TABLE D_MEJA(
	ID NUMBER PRIMARY KEY, 
	ID_MEJA REFERENCES MEJA(ID),
	WAKTU_PESAN TIMESTAMP NOT NULL,
	PERKIRAAN_KELUAR TIMESTAMP NOT NULL
);

CREATE TABLE WAITING_LIST(
	ID NUMBER PRIMARY KEY,
	ID_PELANGGAN NUMBER REFERENCES PELANGGAN(ID),
	ID_MEJA NUMBER REFERENCES MEJA(ID),
	TGL_WAKTU_PEMESANAN DATE NOT NULL
);

CREATE TABLE TRANSAKSI(
	NOMOR_NOTA VARCHAR2(15) PRIMARY KEY,
	ID_PELANGGAN NUMBER REFERENCES PELANGGAN(ID),
	NO_MEJA NUMBER REFERENCES MEJA(ID),
	NAMA_KASIR VARCHAR2(50) NOT NULL,
	METODE_PEMBAYARAN VARCHAR2(50) NOT NULL,
	TOTAL_PEMBELIAN NUMBER NOT NULL,
	POTONGAN_PEMBELIAN NUMBER NOT NULL,
	TOTAL_AKHIR NUMBER NOT NULL,
	TGL_PEMBELIAN DATE NOT NULL
);

CREATE TABLE D_TRANSAKSI(
	NOMOR_NOTA VARCHAR2(15) REFERENCES TRANSAKSI(NOMOR_NOTA),
	ID_MENU NUMBER REFERENCES MENU(ID),
	NAMA_MENU VARCHAR2(55) NOT NULL,
	JUMLAH_MENU NUMBER NOT NULL,
	HARGA_MENU NUMBER NOT NULL,
	DISKON_MENU NUMBER NOT NULL,
	TOTAL NUMBER NOT NULL
);

INSERT INTO JENIS_MENU VALUES(1,'SE001','SEAFOOD');
INSERT INTO JENIS_MENU VALUES(2,'AY001','AYAM');
INSERT INTO JENIS_MENU VALUES(3,'SA001','SAYUR');

INSERT INTO MENU VALUES(1,1,'CG001','CUMI GORENG TEPUNG',1,35000,0,35000);
INSERT INTO MENU VALUES(2,1,'CG002','CUMI GORENG MENTEGA',1,20000,25,15000);
INSERT INTO MENU VALUES(3,2,'AB001','AYAM BAKAR',1,35000,10,31500);
INSERT INTO MENU VALUES(4,3,'CB001','CAH BABY KAILAN',1,37000,20,29600);
INSERT INTO MENU VALUES(5,3,'CK001','CAH KANGKUNG',0,21000,0,21000);

-- MANAJER := Pemilik jabatan tertinggi di sistem restoran ini
-- KOKI := Tugas nya adalah menyiapkan pesanan dari pelayan untuk ditujukan kepada pelanggan
-- PELAYAN := Tugas nya adalah menyampaikan data permintaan pelanggan kepada koki
-- KASIR := Tugas nya adalah mencatat seluruh total biaya dari pesanan milik pelanggan
-- RESEPSIONIS := Tugas nya adalah memasukkan data Waiting List dari pelanggan
-- Gaji := gaji yang diberikan adalah gaji per jamnya
INSERT INTO JABATAN VALUES(1,'MANAJER',40000);
INSERT INTO JABATAN VALUES(2,'KOKI',35000);
INSERT INTO JABATAN VALUES(3,'PELAYAN',30000);
INSERT INTO JABATAN VALUES(4,'KASIR',30000);
INSERT INTO JABATAN VALUES(5,'RESEPSIONIS',30000);

INSERT INTO KARYAWAN VALUES(1,4,'PATKUS123','PatricKus','PATRICK KUSANAGI',TO_DATE('12/03/2018','DD/MM/YYYY'));
INSERT INTO KARYAWAN VALUES(2,3,'ANDREHEBAT','AndrianSug','ANDRIAN SUGIANTO',TO_DATE('12/03/2018','DD/MM/YYYY'));
INSERT INTO KARYAWAN VALUES(3,4,'LUKKY23','LukkyHar','LUKKY HARIYANTO',TO_DATE('24/12/2020','DD/MM/YYYY'));
INSERT INTO KARYAWAN VALUES(4,2,'STEVEN57','StevenLim','STEVEN LIEM',TO_DATE('24/01/2021','DD/MM/YYYY'));
INSERT INTO KARYAWAN VALUES(5,1,'ERICKN123','ErickN','ERICK NATHANAEL',TO_DATE('08/03/2021','DD/MM/YYYY'));

INSERT INTO PELANGGAN VALUES(1,'BUDI DOREMI','JL. BUNTU 4 NO 7','087853111900');
INSERT INTO PELANGGAN VALUES(2,'MICHAEL ANGELO', 'JL. RAYA 6 NO 10','08972018528');
INSERT INTO PELANGGAN VALUES(3,'BIMA SAPUTRA','JL. NINJA 2 NO 17','08977205819');

INSERT INTO ABSENSI VALUES(1,1,TO_CHAR(TO_DATE('10:24:30','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('15:24:30','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('12/12/2000 22:24:30','DD-MM-YYYY HH24:MI:SS'),'DD-MM-YYYY HH24:MI:SS'));
INSERT INTO ABSENSI VALUES(2,2,TO_CHAR(TO_DATE('09:11:14','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('17:11:12','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('12/12/2000 22:24:30','DD-MM-YYYY HH24:MI:SS'),'DD-MM-YYYY HH24:MI:SS'));
INSERT INTO ABSENSI VALUES(3,3,TO_CHAR(TO_DATE('10:03:24','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('16:07:01','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('13/12/2000 22:24:30','DD-MM-YYYY HH24:MI:SS'),'DD-MM-YYYY HH24:MI:SS'));
INSERT INTO ABSENSI VALUES(4,4,TO_CHAR(TO_DATE('10:01:01','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('17:10:19','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('04/11/2000 22:24:30','DD-MM-YYYY HH24:MI:SS'),'DD-MM-YYYY HH24:MI:SS'));
INSERT INTO ABSENSI VALUES(5,5,TO_CHAR(TO_DATE('10:08:30','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('18:02:56','HH24:MI:SS'),'HH24:MI:SS'),TO_CHAR(TO_DATE('22/02/2000 22:24:30','DD-MM-YYYY HH24:MI:SS'),'DD-MM-YYYY HH24:MI:SS'));

INSERT INTO MEJA VALUES(1,'Y');
INSERT INTO MEJA VALUES(2,'Y');
INSERT INTO MEJA VALUES(3,'Y');
INSERT INTO MEJA VALUES(4,'Y');
INSERT INTO MEJA VALUES(5,'Y');
INSERT INTO MEJA VALUES(6,'Y');
INSERT INTO MEJA VALUES(7,'Y');
INSERT INTO MEJA VALUES(8,'Y');
INSERT INTO MEJA VALUES(9,'Y');
INSERT INTO MEJA VALUES(10,'Y');

CREATE OR REPLACE TRIGGER TRIGGER_KARYAWAN
BEFORE INSERT ON KARYAWAN 
FOR EACH ROW 
DECLARE
	TMP NUMBER;
BEGIN 
	SELECT COUNT(ID) INTO TMP FROM KARYAWAN; 
    :NEW.ID := TMP + 1;
    :NEW.TGL_DAFTAR := SYSDATE;

END;
/
SHOW ERR;

CREATE OR REPLACE TRIGGER TRIGGER_KARYAWAN
BEFORE INSERT ON KARYAWAN 
FOR EACH ROW 
DECLARE
	TMP NUMBER;
BEGIN 
	SELECT COUNT(ID) INTO TMP FROM KARYAWAN; 
    :NEW.ID := TMP + 1;
    :NEW.TGL_DAFTAR := SYSDATE;

END;
/
SHOW ERR;

CREATE OR REPLACE procedure CREATE_NOTA
RETURN VARCHAR2
IS
    CTR NUMBER;
    FLAG BOOLEAN;
    TEMP NUMBER;
BEGIN
    FLAG := TRUE;
    CTR := 1;
	
    SELECT NVL(COUNT(*),0) INTO TEMP 
    FROM TRANSAKSI
    WHERE NOMOR_NOTA LIKE 'PM' || TO_CHAR(SYSDATE,'YYYYMMDD') || '%';
    CTR := CTR + TEMP;
RETURN 'PM' || TO_CHAR(SYSDATE,'YYYYMMDD') || LPAD(CTR,5,'0');
END;
/
SHOW ERR;

--untuk pengecekan apakah meja sudah dipesan atau belum terlebih dahulu sehingga tidak ada pemesananan yang tabrakan (BELUM SELESAI)
CREATE OR REPLACE TRIGGER PESAN_MEJA 
BEFORE INSERT ON D_MEJA
FOR EACH ROW 
DECLARE
	MASUK TIMESTAMP;
	KELUAR TIMESTAMP;
	X_WAKTU EXCEPTION;
BEGIN
	

	EXCEPTION
		WHEN X_WAKTU THEN
			RAISE_APPLICATION_ERROR(-20001,'Meja telah dipesan');
END;
/
SHOW ERR;



COMMIT;


SELECT to_char(sysdate - (2 / 24), 'MM-DD-YYYY HH24') FROM DUAL;